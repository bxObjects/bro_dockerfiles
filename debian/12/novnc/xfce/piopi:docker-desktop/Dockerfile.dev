FROM debian:12.11

# ENPSX Specific

ENV PYTHONUNBUFFERED 1

RUN mkdir /code

WORKDIR /code

COPY requirements.txt enm_client_scripting-1.22.2-py2.py3-none-any.whl ./

RUN apt-get update && \
    apt-get install -y apt-utils && \
    apt-get install -y openssl && \
    apt-get install -y build-essential libffi-dev python3-dev && \
    apt-get install -y libsasl2-dev libldap2-dev libssl-dev && \
    apt-get install -y default-libmysqlclient-dev && \
    apt-get install -y python3-django-auth-ldap && \
    apt-get install -y nano && \
    apt-get install -y cron && \
    apt-get install -y sshpass && \
    apt-get install -y emacs && \
    apt-get install -y openssh-server  

# RUN pip install --upgrade pip && pip install -r requirements.txt

# SSH, NoVNC and VNC access
# Install dependencies for VNC and NoVNC
ENV DISPLAY=:1 \
    VNC_PORT=5901 \
    NO_VNC_PORT=6901 \
    VNC_COL_DEPTH=32 \
    VNC_RESOLUTION=1920x1080

# No interactive frontend during docker build
ENV DEBIAN_FRONTEND=noninteractive


RUN apt-get update && \
    apt-get install --no-install-recommends -y \
    xvfb xauth dbus-x11 xfce4 xfce4-terminal \
    wget sudo curl gpg git bzip2 vim procps python3 x11-xserver-utils \
    novnc websockify python3-websockify \
    emacs \
    libnss3 libnspr4 libasound2 libgbm1 ca-certificates fonts-liberation xdg-utils \
    tigervnc-standalone-server tigervnc-common firefox-esr; \
    curl http://ftp.us.debian.org/debian/pool/main/liba/libappindicator/libappindicator3-1_0.4.92-7_amd64.deb --output /opt/libappindicator3-1_0.4.92-7_amd64.deb && \
    curl http://ftp.us.debian.org/debian/pool/main/libi/libindicator/libindicator3-7_0.5.0-4_amd64.deb --output /opt/libindicator3-7_0.5.0-4_amd64.deb && \
    apt-get install -y /opt/libappindicator3-1_0.4.92-7_amd64.deb /opt/libindicator3-7_0.5.0-4_amd64.deb; \
    rm -vf /opt/lib*.deb; \
    apt-get clean; \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# Install OpenSSH server
RUN apt-get update && apt-get install -y openssh-server

RUN ssh-keygen -A

# Create SSH directory and set permissions
RUN mkdir /var/run/sshd
RUN chmod 0755 /var/run/sshd

# Configure SSH to allow root login (for simplicity; consider creating a dedicated user in production)
RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN sed -i 's/UsePAM yes/UsePAM no/' /etc/ssh/sshd_config

# Set a root password (change this in a real scenario)
RUN echo 'root:password' | chpasswd


ENV TERM=xterm
# Install NOVNC.
# RUN     git clone https://github.com/novnc/noVNC.git /opt/noVNC; \
#         git clone https://github.com/novnc/websockify.git /opt/noVNC/utils/websockify; \
#         ln -s /opt/noVNC/vnc.html /opt/noVNC/index.html

# disable shared memory X11 affecting Chromium
ENV QT_X11_NO_MITSHM=1 \
    _X11_NO_MITSHM=1 \
    _MITSHM=0


# give every user read write access to the "/root" folder where the binary is cached
RUN ls -la /root
RUN chmod 777 /root && mkdir /src

RUN groupadd -g 61000 dockeruser; \
    useradd -g 61000 -l -m -s /bin/bash -u 61000 dockeruser

COPY assets/config/ /home/dockeruser/.config

RUN chown -R dockeruser:dockeruser /home/dockeruser;\
    chmod -R 777 /home/dockeruser ;\
    adduser dockeruser sudo;\
    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

USER dockeruser
# versions of local tools
RUN echo  "debian version:  $(cat /etc/debian_version) \n" \
          "user:            $(whoami) \n"

COPY scripts/entrypoint.sh /src

#Expose port 5901 to view display using VNC Viewer
# Expose the SSH port
EXPOSE 22 5901 6901

ENTRYPOINT ["/src/entrypoint.sh"]
